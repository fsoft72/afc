#
# AFC Makefile
#
# (C)Copyright 2001 Fabio Rotondo (fabio@rotondo.it)
#
# This software is distributed under the GPL (v2 or +) licence
# For more info, visit http://www.gnu.org
#

CC=gcc
AR=ar

#
# Modify these params if the commands are somewhere else
#

SED=sed
CP=cp
MV=mv
LN=ln -sf
RM=rm -f
CHMOD=chmod

CFLAGS=-g -Wall -O2 -Wstrict-prototypes -DMINGW -DDEBUG

OBJS=string.o base.o list.o array.o cgi_manager.o dictionary.o hash.o \
     mem_tracker.o readargs.o regexp.o string_list.o dynamic_class.o \
     threader.o date_handler.o md5.o

LIBFLAGS=-shared

#
# Modify these params to copy files in different locations
#
LIBDIR=/usr/local/lib
BINDIR=/usr/local/bin
INCDIR=/usr/local/include

TESTS=array.test dirmaster.test base.test

all: mingw_libpcre $(OBJS) mingw_static

mingw_libpcre:
	@make clean; cd pcre; make clean; make mingw_all

mingw_static: $(OBJS)

	@echo "Creating Static library..."
	@$(AR) rcs libafc.a $(OBJS) pcre/libpcre.a #/mingw/lib/pthreadGC.a


test:	$(TESTS)

libpcre:
	@cd pcre; make


static: $(OBJS)
	@echo "Creating Static library..."
	@$(AR) rcs libafc.a $(OBJS) pcre/libpcre.a

lib: $(OBJS)
	@echo "Creating Shared library..."
	@$(CC) $(LIBFLAGS) -Wl,-soname,libafc.so.1 -o libafc.so.1.0.0 $(OBJS) pcre/libpcre.a

checkdirs:
	@echo "Checking "
	@echo "   ... library dir"
	@if ! [ -d $(LIBDIR) ]; then echo "Install directory not found: $(LIBDIR)"; exit 1; fi
	@echo "   ... binary dir"
	@if ! [ -d $(BINDIR) ]; then echo "Install directory not found: $(BINDIR)"; exit 1; fi
	@echo "   ... include dir"
	@if ! [ -d $(INCDIR) ]; then echo "Install directory not found: $(INCDIR)"; exit 1; fi

bins:
	@echo "Copying binaries"
	@$(SED) -e 's�@LIBDIR@�$(LIBDIR)�g' -e 's�@INCDIR@�$(INCDIR)�g' bin/afc-config > $(BINDIR)/afc-config
	@$(CHMOD) 755 $(BINDIR)/afc-config
	@$(CP) bin/afc_start $(BINDIR)/.

includes:	lib_easygui_includes
	@echo "Copying header files"
	@if [ -d $(INCDIR)/afc ]; then echo "AFC Directory already exists: just copying files..."; else mkdir $(INCDIR)/afc; fi
	@cp *.h $(INCDIR)/afc
	@install -d $(INCDIR)/afc/pcre
	@install pcre/*.h $(INCDIR)/afc/pcre/


install: checkdirs static lib bins includes
	@echo "Installing"
	@echo "   ... shared library"
	@$(MV) libafc.so.1.* $(LIBDIR)
	@echo "   ... static library"
	@$(MV) libafc.a $(LIBDIR)
	@echo "   ... creating symlinks"
	@$(LN) $(LIBDIR)/libafc.so.1 $(LIBDIR)/libafc.so
	@echo "   ... DONE!"

lib_easygui:
	@cd easygui; make lib

lib_easygui_install:	lib_easygui
	@cd easygui; make install

lib_easygui_includes:
	@cd easygui; make includes


cpp:
	@cd afcpp; make

cpp_install: cpp cpp_lib
	@echo "Installing"
	@echo "   ... AFC++ library"
	@$(MV) afcpp/libafcpp.so.1.* $(LIBDIR)
	@$(LN) $(LIBDIR)/libafcpp.so.1 $(LIBDIR)/libafcpp.so
	@echo "   ... DONE!"

cpp_lib:
	@cd afcpp; make lib

clean:
	@$(RM) *.o 2>/dev/null
	@$(RM) libafc.a 2>/dev/null
	@$(RM) libafc.so* 2>/dev/null
	@$(RM) afcpp/*.o 2>/dev/null
	@$(RM) afcpp/libafcpp.so* 2>/dev/null
	@find -name "*.test" -type f -exec $(RM) {} \;

%.o : %.c
	@echo "Building $@"
	$(CC) -c $(CFLAGS) $< -o $@

base.test: base.c
	@$(CC) -DTEST_CLASS -o base.test $(CFLAGS) base.c string.o

array.test:	array.c array.h
	@$(CC) -DTEST_CLASS -o array.test $(CFLAGS) array.c string.o base.o mem_tracker.o

dirmaster.test:	dirmaster.c
	@$(CC) -DTEST_CLASS -o dirmaster.test $(CFLAGS) dirmaster.c string.o array.o

cmdparser.test: cmd_parser.c cmd_parser.h
	@$(CC) -DTEST_CLASS -o cmdparser.test $(CFLAGS) cmd_parser.c string.o base.o list.o array.o cgi_manager.o dictionary.o dirmaster.o hash.o readargs.o regexp.o string_list.o file_operations.o dynamic_class.o dynamic_class_master.o fs_tree.o -ldl

threader.test:	threader.c threader.h
	@$(CC) -DTEST_CLASS -o threader.test $(CFLAGS) threader.c string.o array.o hash.o dictionary.o base.o mem_tracker.o -lpthread

threader.exe:	threader.c threader.h
	@$(CC) -DTEST_CLASS -o threader.exe $(CFLAGS) threader.c string.o array.o hash.o dictionary.o base.o mem_tracker.o /mingw/lib/libpthreadGC.a

mem_debugger.test:	mem_debugger.c mem_debugger.h
	@$(CC) -DTEST_CLASS -o mem_debugger.test $(CFLAGS) mem_debugger.c string.o array.o hash.o dictionary.o base.o -lpthread

md5.test:	md5.h md5.c
	@$(CC) -DTEST_CLASS -o md5.test $(CFLAGS) md5.c  base.o string.o  mem_tracker.o
